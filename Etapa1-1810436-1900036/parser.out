Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TkElse

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> TkOBlock opt_stmt_list TkCBlock
Rule 3     opt_stmt_list -> stmt_list
Rule 4     opt_stmt_list -> empty
Rule 5     stmt_list -> statement
Rule 6     stmt_list -> statement TkSemicolon stmt_list
Rule 7     statement -> declaration_stmt
Rule 8     statement -> assignment_stmt
Rule 9     statement -> print_stmt
Rule 10    statement -> skip_stmt
Rule 11    statement -> return_stmt
Rule 12    statement -> if_stmt
Rule 13    statement -> while_stmt
Rule 14    declaration_stmt -> TkInt declare_id_list
Rule 15    declaration_stmt -> TkBool declare_id_list
Rule 16    declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list
Rule 17    declare_id_list -> TkId
Rule 18    declare_id_list -> TkId TkComma declare_id_list
Rule 19    assignment_stmt -> TkId TkAsig expr
Rule 20    print_stmt -> TkPrint expr
Rule 21    skip_stmt -> TkSkip
Rule 22    return_stmt -> TkReturn expr
Rule 23    while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd
Rule 24    if_guards_list_collector -> if_guard_clause_tuple
Rule 25    if_guards_list_collector -> if_guards_list_collector if_guard_clause_tuple
Rule 26    if_guard_clause_tuple -> expr TkArrow body_sequencing
Rule 27    if_guard_clause_tuple -> TkGuard expr TkArrow body_sequencing
Rule 28    if_stmt -> TkIf if_guards_list TkFi
Rule 29    if_guards_list -> if_guard_clause
Rule 30    if_guards_list -> if_guard_clause if_guards_list
Rule 31    if_guard_clause -> expr TkArrow body_sequencing
Rule 32    if_guard_clause -> TkGuard expr TkArrow body_sequencing
Rule 33    body_sequencing -> body_stmt_item
Rule 34    body_sequencing -> body_stmt_item TkSemicolon body_sequencing
Rule 35    body_stmt_item -> assignment_stmt
Rule 36    body_stmt_item -> print_stmt
Rule 37    body_stmt_item -> skip_stmt
Rule 38    body_stmt_item -> return_stmt
Rule 39    body_stmt_item -> if_stmt
Rule 40    body_stmt_item -> while_stmt
Rule 41    body_stmt_item -> block
Rule 42    atom -> atom TkApp simple_atom
Rule 43    atom -> simple_atom
Rule 44    simple_atom -> atom TkOpenPar expr TkClosePar
Rule 45    simple_atom -> TkOpenPar expr TkClosePar
Rule 46    simple_atom -> TkId
Rule 47    simple_atom -> TkNum
Rule 48    simple_atom -> TkTrue
Rule 49    simple_atom -> TkFalse
Rule 50    simple_atom -> TkString
Rule 51    expr -> TkMinus expr
Rule 52    expr -> TkNot expr
Rule 53    expr -> expr TkPlus expr
Rule 54    expr -> expr TkMinus expr
Rule 55    expr -> expr TkMult expr
Rule 56    expr -> expr TkAnd expr
Rule 57    expr -> expr TkOr expr
Rule 58    expr -> expr TkEqual expr
Rule 59    expr -> expr TkNEqual expr
Rule 60    expr -> expr TkLess expr
Rule 61    expr -> expr TkGreater expr
Rule 62    expr -> expr TkLeq expr
Rule 63    expr -> expr TkGeq expr
Rule 64    expr -> atom
Rule 65    expr -> TkNum
Rule 66    expr -> TkTrue
Rule 67    expr -> TkFalse
Rule 68    expr -> TkString
Rule 69    expr -> TkId
Rule 70    expr -> expr TkComma expr
Rule 71    expr -> expr TkTwoPoints expr
Rule 72    empty -> <empty>

Terminals, with rules where they appear

TkAnd                : 56
TkApp                : 42
TkArrow              : 23 26 27 31 32
TkAsig               : 19
TkBool               : 15
TkCBlock             : 2
TkCBracket           : 16
TkClosePar           : 44 45
TkComma              : 18 70
TkElse               : 
TkEnd                : 23
TkEqual              : 58
TkFalse              : 49 67
TkFi                 : 28
TkFunction           : 16
TkGeq                : 63
TkGreater            : 61
TkGuard              : 27 32
TkId                 : 17 18 19 46 69
TkIf                 : 28
TkInt                : 14
TkLeq                : 62
TkLess               : 60
TkMinus              : 51 54
TkMult               : 55
TkNEqual             : 59
TkNot                : 52
TkNum                : 16 47 65
TkOBlock             : 2
TkOBracket           : 16
TkOpenPar            : 44 45
TkOr                 : 57
TkPlus               : 53
TkPrint              : 20
TkReturn             : 22
TkSemicolon          : 6 34
TkSkip               : 21
TkSoForth            : 16
TkString             : 50 68
TkTrue               : 48 66
TkTwoPoints          : 71
TkWhile              : 23
error                : 

Nonterminals, with rules where they appear

assignment_stmt      : 8 35
atom                 : 42 44 64
block                : 1 41
body_sequencing      : 23 26 27 31 32 34
body_stmt_item       : 33 34
declaration_stmt     : 7
declare_id_list      : 14 15 16 18
empty                : 4
expr                 : 19 20 22 23 26 27 31 32 44 45 51 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 70 70 71 71
if_guard_clause      : 29 30
if_guard_clause_tuple : 24 25
if_guards_list       : 28 30
if_guards_list_collector : 25
if_stmt              : 12 39
opt_stmt_list        : 2
print_stmt           : 9 36
program              : 0
return_stmt          : 11 38
simple_atom          : 42 43
skip_stmt            : 10 37
statement            : 5 6
stmt_list            : 3 6
while_stmt           : 13 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . TkOBlock opt_stmt_list TkCBlock

    TkOBlock        shift and go to state 3

    program                        shift and go to state 1
    block                          shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> TkOBlock . opt_stmt_list TkCBlock
    (3) opt_stmt_list -> . stmt_list
    (4) opt_stmt_list -> . empty
    (5) stmt_list -> . statement
    (6) stmt_list -> . statement TkSemicolon stmt_list
    (72) empty -> .
    (7) statement -> . declaration_stmt
    (8) statement -> . assignment_stmt
    (9) statement -> . print_stmt
    (10) statement -> . skip_stmt
    (11) statement -> . return_stmt
    (12) statement -> . if_stmt
    (13) statement -> . while_stmt
    (14) declaration_stmt -> . TkInt declare_id_list
    (15) declaration_stmt -> . TkBool declare_id_list
    (16) declaration_stmt -> . TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd

    TkCBlock        reduce using rule 72 (empty -> .)
    TkInt           shift and go to state 15
    TkBool          shift and go to state 16
    TkFunction      shift and go to state 17
    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23

    opt_stmt_list                  shift and go to state 4
    stmt_list                      shift and go to state 5
    empty                          shift and go to state 6
    statement                      shift and go to state 7
    declaration_stmt               shift and go to state 8
    assignment_stmt                shift and go to state 9
    print_stmt                     shift and go to state 10
    skip_stmt                      shift and go to state 11
    return_stmt                    shift and go to state 12
    if_stmt                        shift and go to state 13
    while_stmt                     shift and go to state 14

state 4

    (2) block -> TkOBlock opt_stmt_list . TkCBlock

    TkCBlock        shift and go to state 24


state 5

    (3) opt_stmt_list -> stmt_list .

    TkCBlock        reduce using rule 3 (opt_stmt_list -> stmt_list .)


state 6

    (4) opt_stmt_list -> empty .

    TkCBlock        reduce using rule 4 (opt_stmt_list -> empty .)


state 7

    (5) stmt_list -> statement .
    (6) stmt_list -> statement . TkSemicolon stmt_list

    TkCBlock        reduce using rule 5 (stmt_list -> statement .)
    TkSemicolon     shift and go to state 25


state 8

    (7) statement -> declaration_stmt .

    TkSemicolon     reduce using rule 7 (statement -> declaration_stmt .)
    TkCBlock        reduce using rule 7 (statement -> declaration_stmt .)


state 9

    (8) statement -> assignment_stmt .

    TkSemicolon     reduce using rule 8 (statement -> assignment_stmt .)
    TkCBlock        reduce using rule 8 (statement -> assignment_stmt .)


state 10

    (9) statement -> print_stmt .

    TkSemicolon     reduce using rule 9 (statement -> print_stmt .)
    TkCBlock        reduce using rule 9 (statement -> print_stmt .)


state 11

    (10) statement -> skip_stmt .

    TkSemicolon     reduce using rule 10 (statement -> skip_stmt .)
    TkCBlock        reduce using rule 10 (statement -> skip_stmt .)


state 12

    (11) statement -> return_stmt .

    TkSemicolon     reduce using rule 11 (statement -> return_stmt .)
    TkCBlock        reduce using rule 11 (statement -> return_stmt .)


state 13

    (12) statement -> if_stmt .

    TkSemicolon     reduce using rule 12 (statement -> if_stmt .)
    TkCBlock        reduce using rule 12 (statement -> if_stmt .)


state 14

    (13) statement -> while_stmt .

    TkSemicolon     reduce using rule 13 (statement -> while_stmt .)
    TkCBlock        reduce using rule 13 (statement -> while_stmt .)


state 15

    (14) declaration_stmt -> TkInt . declare_id_list
    (17) declare_id_list -> . TkId
    (18) declare_id_list -> . TkId TkComma declare_id_list

    TkId            shift and go to state 27

    declare_id_list                shift and go to state 26

state 16

    (15) declaration_stmt -> TkBool . declare_id_list
    (17) declare_id_list -> . TkId
    (18) declare_id_list -> . TkId TkComma declare_id_list

    TkId            shift and go to state 27

    declare_id_list                shift and go to state 28

state 17

    (16) declaration_stmt -> TkFunction . TkOBracket TkSoForth TkNum TkCBracket declare_id_list

    TkOBracket      shift and go to state 29


state 18

    (19) assignment_stmt -> TkId . TkAsig expr

    TkAsig          shift and go to state 30


state 19

    (20) print_stmt -> TkPrint . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 31
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 20

    (21) skip_stmt -> TkSkip .

    TkSemicolon     reduce using rule 21 (skip_stmt -> TkSkip .)
    TkCBlock        reduce using rule 21 (skip_stmt -> TkSkip .)
    TkGuard         reduce using rule 21 (skip_stmt -> TkSkip .)
    TkMinus         reduce using rule 21 (skip_stmt -> TkSkip .)
    TkNot           reduce using rule 21 (skip_stmt -> TkSkip .)
    TkNum           reduce using rule 21 (skip_stmt -> TkSkip .)
    TkTrue          reduce using rule 21 (skip_stmt -> TkSkip .)
    TkFalse         reduce using rule 21 (skip_stmt -> TkSkip .)
    TkString        reduce using rule 21 (skip_stmt -> TkSkip .)
    TkId            reduce using rule 21 (skip_stmt -> TkSkip .)
    TkOpenPar       reduce using rule 21 (skip_stmt -> TkSkip .)
    TkFi            reduce using rule 21 (skip_stmt -> TkSkip .)
    TkEnd           reduce using rule 21 (skip_stmt -> TkSkip .)


state 21

    (22) return_stmt -> TkReturn . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 42
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 22

    (28) if_stmt -> TkIf . if_guards_list TkFi
    (29) if_guards_list -> . if_guard_clause
    (30) if_guards_list -> . if_guard_clause if_guards_list
    (31) if_guard_clause -> . expr TkArrow body_sequencing
    (32) if_guard_clause -> . TkGuard expr TkArrow body_sequencing
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkGuard         shift and go to state 46
    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    if_guards_list                 shift and go to state 43
    if_guard_clause                shift and go to state 44
    expr                           shift and go to state 45
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 23

    (23) while_stmt -> TkWhile . expr TkArrow body_sequencing TkEnd
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 47
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 24

    (2) block -> TkOBlock opt_stmt_list TkCBlock .

    $end            reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkSemicolon     reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkGuard         reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkMinus         reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkNot           reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkNum           reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkTrue          reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkFalse         reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkString        reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkId            reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkOpenPar       reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkFi            reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)
    TkEnd           reduce using rule 2 (block -> TkOBlock opt_stmt_list TkCBlock .)


state 25

    (6) stmt_list -> statement TkSemicolon . stmt_list
    (5) stmt_list -> . statement
    (6) stmt_list -> . statement TkSemicolon stmt_list
    (7) statement -> . declaration_stmt
    (8) statement -> . assignment_stmt
    (9) statement -> . print_stmt
    (10) statement -> . skip_stmt
    (11) statement -> . return_stmt
    (12) statement -> . if_stmt
    (13) statement -> . while_stmt
    (14) declaration_stmt -> . TkInt declare_id_list
    (15) declaration_stmt -> . TkBool declare_id_list
    (16) declaration_stmt -> . TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd

    TkInt           shift and go to state 15
    TkBool          shift and go to state 16
    TkFunction      shift and go to state 17
    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23

    statement                      shift and go to state 7
    stmt_list                      shift and go to state 48
    declaration_stmt               shift and go to state 8
    assignment_stmt                shift and go to state 9
    print_stmt                     shift and go to state 10
    skip_stmt                      shift and go to state 11
    return_stmt                    shift and go to state 12
    if_stmt                        shift and go to state 13
    while_stmt                     shift and go to state 14

state 26

    (14) declaration_stmt -> TkInt declare_id_list .

    TkSemicolon     reduce using rule 14 (declaration_stmt -> TkInt declare_id_list .)
    TkCBlock        reduce using rule 14 (declaration_stmt -> TkInt declare_id_list .)


state 27

    (17) declare_id_list -> TkId .
    (18) declare_id_list -> TkId . TkComma declare_id_list

    TkSemicolon     reduce using rule 17 (declare_id_list -> TkId .)
    TkCBlock        reduce using rule 17 (declare_id_list -> TkId .)
    TkComma         shift and go to state 49


state 28

    (15) declaration_stmt -> TkBool declare_id_list .

    TkSemicolon     reduce using rule 15 (declaration_stmt -> TkBool declare_id_list .)
    TkCBlock        reduce using rule 15 (declaration_stmt -> TkBool declare_id_list .)


state 29

    (16) declaration_stmt -> TkFunction TkOBracket . TkSoForth TkNum TkCBracket declare_id_list

    TkSoForth       shift and go to state 50


state 30

    (19) assignment_stmt -> TkId TkAsig . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 51
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 31

    (20) print_stmt -> TkPrint expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

  ! shift/reduce conflict for TkMinus resolved as shift
    TkSemicolon     reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkCBlock        reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkGuard         reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkNot           reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkNum           reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkTrue          reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkFalse         reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkString        reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkId            reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkOpenPar       reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkFi            reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkEnd           reduce using rule 20 (print_stmt -> TkPrint expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64

  ! TkMinus         [ reduce using rule 20 (print_stmt -> TkPrint expr .) ]


state 32

    (51) expr -> TkMinus . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 65
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 33

    (52) expr -> TkNot . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 66
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 34

    (64) expr -> atom .
    (42) atom -> atom . TkApp simple_atom
    (44) simple_atom -> atom . TkOpenPar expr TkClosePar

  ! shift/reduce conflict for TkOpenPar resolved as shift
    TkPlus          reduce using rule 64 (expr -> atom .)
    TkMinus         reduce using rule 64 (expr -> atom .)
    TkMult          reduce using rule 64 (expr -> atom .)
    TkAnd           reduce using rule 64 (expr -> atom .)
    TkOr            reduce using rule 64 (expr -> atom .)
    TkEqual         reduce using rule 64 (expr -> atom .)
    TkNEqual        reduce using rule 64 (expr -> atom .)
    TkLess          reduce using rule 64 (expr -> atom .)
    TkGreater       reduce using rule 64 (expr -> atom .)
    TkLeq           reduce using rule 64 (expr -> atom .)
    TkGeq           reduce using rule 64 (expr -> atom .)
    TkComma         reduce using rule 64 (expr -> atom .)
    TkTwoPoints     reduce using rule 64 (expr -> atom .)
    TkSemicolon     reduce using rule 64 (expr -> atom .)
    TkCBlock        reduce using rule 64 (expr -> atom .)
    TkGuard         reduce using rule 64 (expr -> atom .)
    TkNot           reduce using rule 64 (expr -> atom .)
    TkNum           reduce using rule 64 (expr -> atom .)
    TkTrue          reduce using rule 64 (expr -> atom .)
    TkFalse         reduce using rule 64 (expr -> atom .)
    TkString        reduce using rule 64 (expr -> atom .)
    TkId            reduce using rule 64 (expr -> atom .)
    TkFi            reduce using rule 64 (expr -> atom .)
    TkEnd           reduce using rule 64 (expr -> atom .)
    TkArrow         reduce using rule 64 (expr -> atom .)
    TkClosePar      reduce using rule 64 (expr -> atom .)
    TkApp           shift and go to state 67
    TkOpenPar       shift and go to state 68

  ! TkOpenPar       [ reduce using rule 64 (expr -> atom .) ]


state 35

    (65) expr -> TkNum .
    (47) simple_atom -> TkNum .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkPlus resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkMinus resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkMult resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkAnd resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkOr resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkEqual resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkLess resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkGreater resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkLeq resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkGeq resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkComma resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkTwoPoints resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkCBlock resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkGuard resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkNot resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkNum resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkTrue resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkFalse resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkString resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkId resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkFi resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkEnd resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkArrow resolved using rule 47 (simple_atom -> TkNum .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 47 (simple_atom -> TkNum .)
    TkApp           reduce using rule 47 (simple_atom -> TkNum .)
    TkOpenPar       reduce using rule 47 (simple_atom -> TkNum .)
    TkPlus          reduce using rule 47 (simple_atom -> TkNum .)
    TkMinus         reduce using rule 47 (simple_atom -> TkNum .)
    TkMult          reduce using rule 47 (simple_atom -> TkNum .)
    TkAnd           reduce using rule 47 (simple_atom -> TkNum .)
    TkOr            reduce using rule 47 (simple_atom -> TkNum .)
    TkEqual         reduce using rule 47 (simple_atom -> TkNum .)
    TkNEqual        reduce using rule 47 (simple_atom -> TkNum .)
    TkLess          reduce using rule 47 (simple_atom -> TkNum .)
    TkGreater       reduce using rule 47 (simple_atom -> TkNum .)
    TkLeq           reduce using rule 47 (simple_atom -> TkNum .)
    TkGeq           reduce using rule 47 (simple_atom -> TkNum .)
    TkComma         reduce using rule 47 (simple_atom -> TkNum .)
    TkTwoPoints     reduce using rule 47 (simple_atom -> TkNum .)
    TkSemicolon     reduce using rule 47 (simple_atom -> TkNum .)
    TkCBlock        reduce using rule 47 (simple_atom -> TkNum .)
    TkGuard         reduce using rule 47 (simple_atom -> TkNum .)
    TkNot           reduce using rule 47 (simple_atom -> TkNum .)
    TkNum           reduce using rule 47 (simple_atom -> TkNum .)
    TkTrue          reduce using rule 47 (simple_atom -> TkNum .)
    TkFalse         reduce using rule 47 (simple_atom -> TkNum .)
    TkString        reduce using rule 47 (simple_atom -> TkNum .)
    TkId            reduce using rule 47 (simple_atom -> TkNum .)
    TkFi            reduce using rule 47 (simple_atom -> TkNum .)
    TkEnd           reduce using rule 47 (simple_atom -> TkNum .)
    TkArrow         reduce using rule 47 (simple_atom -> TkNum .)
    TkClosePar      reduce using rule 47 (simple_atom -> TkNum .)

  ! TkPlus          [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkMinus         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkMult          [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkAnd           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkOr            [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkEqual         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkNEqual        [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkLess          [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkGreater       [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkLeq           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkGeq           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkComma         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkTwoPoints     [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkSemicolon     [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkCBlock        [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkGuard         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkNot           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkNum           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkTrue          [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkFalse         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkString        [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkId            [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkOpenPar       [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkFi            [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkEnd           [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkArrow         [ reduce using rule 65 (expr -> TkNum .) ]
  ! TkClosePar      [ reduce using rule 65 (expr -> TkNum .) ]


state 36

    (66) expr -> TkTrue .
    (48) simple_atom -> TkTrue .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkPlus resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkMinus resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkMult resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkAnd resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkOr resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkEqual resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkLess resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkGreater resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkLeq resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkGeq resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkComma resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkTwoPoints resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkCBlock resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkGuard resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkNot resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkNum resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkTrue resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkFalse resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkString resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkId resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkFi resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkEnd resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkArrow resolved using rule 48 (simple_atom -> TkTrue .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 48 (simple_atom -> TkTrue .)
    TkApp           reduce using rule 48 (simple_atom -> TkTrue .)
    TkOpenPar       reduce using rule 48 (simple_atom -> TkTrue .)
    TkPlus          reduce using rule 48 (simple_atom -> TkTrue .)
    TkMinus         reduce using rule 48 (simple_atom -> TkTrue .)
    TkMult          reduce using rule 48 (simple_atom -> TkTrue .)
    TkAnd           reduce using rule 48 (simple_atom -> TkTrue .)
    TkOr            reduce using rule 48 (simple_atom -> TkTrue .)
    TkEqual         reduce using rule 48 (simple_atom -> TkTrue .)
    TkNEqual        reduce using rule 48 (simple_atom -> TkTrue .)
    TkLess          reduce using rule 48 (simple_atom -> TkTrue .)
    TkGreater       reduce using rule 48 (simple_atom -> TkTrue .)
    TkLeq           reduce using rule 48 (simple_atom -> TkTrue .)
    TkGeq           reduce using rule 48 (simple_atom -> TkTrue .)
    TkComma         reduce using rule 48 (simple_atom -> TkTrue .)
    TkTwoPoints     reduce using rule 48 (simple_atom -> TkTrue .)
    TkSemicolon     reduce using rule 48 (simple_atom -> TkTrue .)
    TkCBlock        reduce using rule 48 (simple_atom -> TkTrue .)
    TkGuard         reduce using rule 48 (simple_atom -> TkTrue .)
    TkNot           reduce using rule 48 (simple_atom -> TkTrue .)
    TkNum           reduce using rule 48 (simple_atom -> TkTrue .)
    TkTrue          reduce using rule 48 (simple_atom -> TkTrue .)
    TkFalse         reduce using rule 48 (simple_atom -> TkTrue .)
    TkString        reduce using rule 48 (simple_atom -> TkTrue .)
    TkId            reduce using rule 48 (simple_atom -> TkTrue .)
    TkFi            reduce using rule 48 (simple_atom -> TkTrue .)
    TkEnd           reduce using rule 48 (simple_atom -> TkTrue .)
    TkArrow         reduce using rule 48 (simple_atom -> TkTrue .)
    TkClosePar      reduce using rule 48 (simple_atom -> TkTrue .)

  ! TkPlus          [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkMinus         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkMult          [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkAnd           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkOr            [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkEqual         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkNEqual        [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkLess          [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkGreater       [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkLeq           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkGeq           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkComma         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkTwoPoints     [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkSemicolon     [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkCBlock        [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkGuard         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkNot           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkNum           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkTrue          [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkFalse         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkString        [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkId            [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkOpenPar       [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkFi            [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkEnd           [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkArrow         [ reduce using rule 66 (expr -> TkTrue .) ]
  ! TkClosePar      [ reduce using rule 66 (expr -> TkTrue .) ]


state 37

    (67) expr -> TkFalse .
    (49) simple_atom -> TkFalse .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkPlus resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkMinus resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkMult resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkAnd resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkOr resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkEqual resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkLess resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkGreater resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkLeq resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkGeq resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkComma resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkTwoPoints resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkCBlock resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkGuard resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkNot resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkNum resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkTrue resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkFalse resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkString resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkId resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkFi resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkEnd resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkArrow resolved using rule 49 (simple_atom -> TkFalse .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 49 (simple_atom -> TkFalse .)
    TkApp           reduce using rule 49 (simple_atom -> TkFalse .)
    TkOpenPar       reduce using rule 49 (simple_atom -> TkFalse .)
    TkPlus          reduce using rule 49 (simple_atom -> TkFalse .)
    TkMinus         reduce using rule 49 (simple_atom -> TkFalse .)
    TkMult          reduce using rule 49 (simple_atom -> TkFalse .)
    TkAnd           reduce using rule 49 (simple_atom -> TkFalse .)
    TkOr            reduce using rule 49 (simple_atom -> TkFalse .)
    TkEqual         reduce using rule 49 (simple_atom -> TkFalse .)
    TkNEqual        reduce using rule 49 (simple_atom -> TkFalse .)
    TkLess          reduce using rule 49 (simple_atom -> TkFalse .)
    TkGreater       reduce using rule 49 (simple_atom -> TkFalse .)
    TkLeq           reduce using rule 49 (simple_atom -> TkFalse .)
    TkGeq           reduce using rule 49 (simple_atom -> TkFalse .)
    TkComma         reduce using rule 49 (simple_atom -> TkFalse .)
    TkTwoPoints     reduce using rule 49 (simple_atom -> TkFalse .)
    TkSemicolon     reduce using rule 49 (simple_atom -> TkFalse .)
    TkCBlock        reduce using rule 49 (simple_atom -> TkFalse .)
    TkGuard         reduce using rule 49 (simple_atom -> TkFalse .)
    TkNot           reduce using rule 49 (simple_atom -> TkFalse .)
    TkNum           reduce using rule 49 (simple_atom -> TkFalse .)
    TkTrue          reduce using rule 49 (simple_atom -> TkFalse .)
    TkFalse         reduce using rule 49 (simple_atom -> TkFalse .)
    TkString        reduce using rule 49 (simple_atom -> TkFalse .)
    TkId            reduce using rule 49 (simple_atom -> TkFalse .)
    TkFi            reduce using rule 49 (simple_atom -> TkFalse .)
    TkEnd           reduce using rule 49 (simple_atom -> TkFalse .)
    TkArrow         reduce using rule 49 (simple_atom -> TkFalse .)
    TkClosePar      reduce using rule 49 (simple_atom -> TkFalse .)

  ! TkPlus          [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkMinus         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkMult          [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkAnd           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkOr            [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkEqual         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkNEqual        [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkLess          [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkGreater       [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkLeq           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkGeq           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkComma         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkTwoPoints     [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkSemicolon     [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkCBlock        [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkGuard         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkNot           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkNum           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkTrue          [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkFalse         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkString        [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkId            [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkOpenPar       [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkFi            [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkEnd           [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkArrow         [ reduce using rule 67 (expr -> TkFalse .) ]
  ! TkClosePar      [ reduce using rule 67 (expr -> TkFalse .) ]


state 38

    (68) expr -> TkString .
    (50) simple_atom -> TkString .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkPlus resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkMinus resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkMult resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkAnd resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkOr resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkEqual resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkLess resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkGreater resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkLeq resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkGeq resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkComma resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkTwoPoints resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkCBlock resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkGuard resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkNot resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkNum resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkTrue resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkFalse resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkString resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkId resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkFi resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkEnd resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkArrow resolved using rule 50 (simple_atom -> TkString .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 50 (simple_atom -> TkString .)
    TkApp           reduce using rule 50 (simple_atom -> TkString .)
    TkOpenPar       reduce using rule 50 (simple_atom -> TkString .)
    TkPlus          reduce using rule 50 (simple_atom -> TkString .)
    TkMinus         reduce using rule 50 (simple_atom -> TkString .)
    TkMult          reduce using rule 50 (simple_atom -> TkString .)
    TkAnd           reduce using rule 50 (simple_atom -> TkString .)
    TkOr            reduce using rule 50 (simple_atom -> TkString .)
    TkEqual         reduce using rule 50 (simple_atom -> TkString .)
    TkNEqual        reduce using rule 50 (simple_atom -> TkString .)
    TkLess          reduce using rule 50 (simple_atom -> TkString .)
    TkGreater       reduce using rule 50 (simple_atom -> TkString .)
    TkLeq           reduce using rule 50 (simple_atom -> TkString .)
    TkGeq           reduce using rule 50 (simple_atom -> TkString .)
    TkComma         reduce using rule 50 (simple_atom -> TkString .)
    TkTwoPoints     reduce using rule 50 (simple_atom -> TkString .)
    TkSemicolon     reduce using rule 50 (simple_atom -> TkString .)
    TkCBlock        reduce using rule 50 (simple_atom -> TkString .)
    TkGuard         reduce using rule 50 (simple_atom -> TkString .)
    TkNot           reduce using rule 50 (simple_atom -> TkString .)
    TkNum           reduce using rule 50 (simple_atom -> TkString .)
    TkTrue          reduce using rule 50 (simple_atom -> TkString .)
    TkFalse         reduce using rule 50 (simple_atom -> TkString .)
    TkString        reduce using rule 50 (simple_atom -> TkString .)
    TkId            reduce using rule 50 (simple_atom -> TkString .)
    TkFi            reduce using rule 50 (simple_atom -> TkString .)
    TkEnd           reduce using rule 50 (simple_atom -> TkString .)
    TkArrow         reduce using rule 50 (simple_atom -> TkString .)
    TkClosePar      reduce using rule 50 (simple_atom -> TkString .)

  ! TkPlus          [ reduce using rule 68 (expr -> TkString .) ]
  ! TkMinus         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkMult          [ reduce using rule 68 (expr -> TkString .) ]
  ! TkAnd           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkOr            [ reduce using rule 68 (expr -> TkString .) ]
  ! TkEqual         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkNEqual        [ reduce using rule 68 (expr -> TkString .) ]
  ! TkLess          [ reduce using rule 68 (expr -> TkString .) ]
  ! TkGreater       [ reduce using rule 68 (expr -> TkString .) ]
  ! TkLeq           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkGeq           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkComma         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkTwoPoints     [ reduce using rule 68 (expr -> TkString .) ]
  ! TkSemicolon     [ reduce using rule 68 (expr -> TkString .) ]
  ! TkCBlock        [ reduce using rule 68 (expr -> TkString .) ]
  ! TkGuard         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkNot           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkNum           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkTrue          [ reduce using rule 68 (expr -> TkString .) ]
  ! TkFalse         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkString        [ reduce using rule 68 (expr -> TkString .) ]
  ! TkId            [ reduce using rule 68 (expr -> TkString .) ]
  ! TkOpenPar       [ reduce using rule 68 (expr -> TkString .) ]
  ! TkFi            [ reduce using rule 68 (expr -> TkString .) ]
  ! TkEnd           [ reduce using rule 68 (expr -> TkString .) ]
  ! TkArrow         [ reduce using rule 68 (expr -> TkString .) ]
  ! TkClosePar      [ reduce using rule 68 (expr -> TkString .) ]


state 39

    (69) expr -> TkId .
    (46) simple_atom -> TkId .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkPlus resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkMinus resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkMult resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkAnd resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkOr resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkEqual resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkLess resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkGreater resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkLeq resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkGeq resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkComma resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkTwoPoints resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkCBlock resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkGuard resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkNot resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkNum resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkTrue resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkFalse resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkString resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkId resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkFi resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkEnd resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkArrow resolved using rule 46 (simple_atom -> TkId .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 46 (simple_atom -> TkId .)
    TkApp           reduce using rule 46 (simple_atom -> TkId .)
    TkOpenPar       reduce using rule 46 (simple_atom -> TkId .)
    TkPlus          reduce using rule 46 (simple_atom -> TkId .)
    TkMinus         reduce using rule 46 (simple_atom -> TkId .)
    TkMult          reduce using rule 46 (simple_atom -> TkId .)
    TkAnd           reduce using rule 46 (simple_atom -> TkId .)
    TkOr            reduce using rule 46 (simple_atom -> TkId .)
    TkEqual         reduce using rule 46 (simple_atom -> TkId .)
    TkNEqual        reduce using rule 46 (simple_atom -> TkId .)
    TkLess          reduce using rule 46 (simple_atom -> TkId .)
    TkGreater       reduce using rule 46 (simple_atom -> TkId .)
    TkLeq           reduce using rule 46 (simple_atom -> TkId .)
    TkGeq           reduce using rule 46 (simple_atom -> TkId .)
    TkComma         reduce using rule 46 (simple_atom -> TkId .)
    TkTwoPoints     reduce using rule 46 (simple_atom -> TkId .)
    TkSemicolon     reduce using rule 46 (simple_atom -> TkId .)
    TkCBlock        reduce using rule 46 (simple_atom -> TkId .)
    TkGuard         reduce using rule 46 (simple_atom -> TkId .)
    TkNot           reduce using rule 46 (simple_atom -> TkId .)
    TkNum           reduce using rule 46 (simple_atom -> TkId .)
    TkTrue          reduce using rule 46 (simple_atom -> TkId .)
    TkFalse         reduce using rule 46 (simple_atom -> TkId .)
    TkString        reduce using rule 46 (simple_atom -> TkId .)
    TkId            reduce using rule 46 (simple_atom -> TkId .)
    TkFi            reduce using rule 46 (simple_atom -> TkId .)
    TkEnd           reduce using rule 46 (simple_atom -> TkId .)
    TkArrow         reduce using rule 46 (simple_atom -> TkId .)
    TkClosePar      reduce using rule 46 (simple_atom -> TkId .)

  ! TkPlus          [ reduce using rule 69 (expr -> TkId .) ]
  ! TkMinus         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkMult          [ reduce using rule 69 (expr -> TkId .) ]
  ! TkAnd           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkOr            [ reduce using rule 69 (expr -> TkId .) ]
  ! TkEqual         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkNEqual        [ reduce using rule 69 (expr -> TkId .) ]
  ! TkLess          [ reduce using rule 69 (expr -> TkId .) ]
  ! TkGreater       [ reduce using rule 69 (expr -> TkId .) ]
  ! TkLeq           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkGeq           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkComma         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkTwoPoints     [ reduce using rule 69 (expr -> TkId .) ]
  ! TkSemicolon     [ reduce using rule 69 (expr -> TkId .) ]
  ! TkCBlock        [ reduce using rule 69 (expr -> TkId .) ]
  ! TkGuard         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkNot           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkNum           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkTrue          [ reduce using rule 69 (expr -> TkId .) ]
  ! TkFalse         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkString        [ reduce using rule 69 (expr -> TkId .) ]
  ! TkId            [ reduce using rule 69 (expr -> TkId .) ]
  ! TkOpenPar       [ reduce using rule 69 (expr -> TkId .) ]
  ! TkFi            [ reduce using rule 69 (expr -> TkId .) ]
  ! TkEnd           [ reduce using rule 69 (expr -> TkId .) ]
  ! TkArrow         [ reduce using rule 69 (expr -> TkId .) ]
  ! TkClosePar      [ reduce using rule 69 (expr -> TkId .) ]


state 40

    (43) atom -> simple_atom .

    TkApp           reduce using rule 43 (atom -> simple_atom .)
    TkOpenPar       reduce using rule 43 (atom -> simple_atom .)
    TkPlus          reduce using rule 43 (atom -> simple_atom .)
    TkMinus         reduce using rule 43 (atom -> simple_atom .)
    TkMult          reduce using rule 43 (atom -> simple_atom .)
    TkAnd           reduce using rule 43 (atom -> simple_atom .)
    TkOr            reduce using rule 43 (atom -> simple_atom .)
    TkEqual         reduce using rule 43 (atom -> simple_atom .)
    TkNEqual        reduce using rule 43 (atom -> simple_atom .)
    TkLess          reduce using rule 43 (atom -> simple_atom .)
    TkGreater       reduce using rule 43 (atom -> simple_atom .)
    TkLeq           reduce using rule 43 (atom -> simple_atom .)
    TkGeq           reduce using rule 43 (atom -> simple_atom .)
    TkComma         reduce using rule 43 (atom -> simple_atom .)
    TkTwoPoints     reduce using rule 43 (atom -> simple_atom .)
    TkSemicolon     reduce using rule 43 (atom -> simple_atom .)
    TkCBlock        reduce using rule 43 (atom -> simple_atom .)
    TkGuard         reduce using rule 43 (atom -> simple_atom .)
    TkNot           reduce using rule 43 (atom -> simple_atom .)
    TkNum           reduce using rule 43 (atom -> simple_atom .)
    TkTrue          reduce using rule 43 (atom -> simple_atom .)
    TkFalse         reduce using rule 43 (atom -> simple_atom .)
    TkString        reduce using rule 43 (atom -> simple_atom .)
    TkId            reduce using rule 43 (atom -> simple_atom .)
    TkFi            reduce using rule 43 (atom -> simple_atom .)
    TkEnd           reduce using rule 43 (atom -> simple_atom .)
    TkArrow         reduce using rule 43 (atom -> simple_atom .)
    TkClosePar      reduce using rule 43 (atom -> simple_atom .)


state 41

    (45) simple_atom -> TkOpenPar . expr TkClosePar
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 69
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 42

    (22) return_stmt -> TkReturn expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

  ! shift/reduce conflict for TkMinus resolved as shift
    TkSemicolon     reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkCBlock        reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkGuard         reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkNot           reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkNum           reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkTrue          reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkFalse         reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkString        reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkId            reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkOpenPar       reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkFi            reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkEnd           reduce using rule 22 (return_stmt -> TkReturn expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64

  ! TkMinus         [ reduce using rule 22 (return_stmt -> TkReturn expr .) ]


state 43

    (28) if_stmt -> TkIf if_guards_list . TkFi

    TkFi            shift and go to state 70


state 44

    (29) if_guards_list -> if_guard_clause .
    (30) if_guards_list -> if_guard_clause . if_guards_list
    (29) if_guards_list -> . if_guard_clause
    (30) if_guards_list -> . if_guard_clause if_guards_list
    (31) if_guard_clause -> . expr TkArrow body_sequencing
    (32) if_guard_clause -> . TkGuard expr TkArrow body_sequencing
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkFi            reduce using rule 29 (if_guards_list -> if_guard_clause .)
    TkGuard         shift and go to state 46
    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    if_guard_clause                shift and go to state 44
    if_guards_list                 shift and go to state 71
    expr                           shift and go to state 45
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 45

    (31) if_guard_clause -> expr . TkArrow body_sequencing
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkArrow         shift and go to state 72
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64


state 46

    (32) if_guard_clause -> TkGuard . expr TkArrow body_sequencing
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 73
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 47

    (23) while_stmt -> TkWhile expr . TkArrow body_sequencing TkEnd
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkArrow         shift and go to state 74
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64


state 48

    (6) stmt_list -> statement TkSemicolon stmt_list .

    TkCBlock        reduce using rule 6 (stmt_list -> statement TkSemicolon stmt_list .)


state 49

    (18) declare_id_list -> TkId TkComma . declare_id_list
    (17) declare_id_list -> . TkId
    (18) declare_id_list -> . TkId TkComma declare_id_list

    TkId            shift and go to state 27

    declare_id_list                shift and go to state 75

state 50

    (16) declaration_stmt -> TkFunction TkOBracket TkSoForth . TkNum TkCBracket declare_id_list

    TkNum           shift and go to state 76


state 51

    (19) assignment_stmt -> TkId TkAsig expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

  ! shift/reduce conflict for TkMinus resolved as shift
    TkSemicolon     reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkCBlock        reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkGuard         reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkNot           reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkNum           reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkTrue          reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkFalse         reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkString        reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkId            reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkOpenPar       reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkFi            reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkEnd           reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64

  ! TkMinus         [ reduce using rule 19 (assignment_stmt -> TkId TkAsig expr .) ]


state 52

    (53) expr -> expr TkPlus . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 77
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 53

    (54) expr -> expr TkMinus . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 78
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 54

    (55) expr -> expr TkMult . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 79
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 55

    (56) expr -> expr TkAnd . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 80
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 56

    (57) expr -> expr TkOr . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 81
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 57

    (58) expr -> expr TkEqual . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 82
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 58

    (59) expr -> expr TkNEqual . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 83
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 59

    (60) expr -> expr TkLess . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 84
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 60

    (61) expr -> expr TkGreater . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 85
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 61

    (62) expr -> expr TkLeq . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 86
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 62

    (63) expr -> expr TkGeq . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 87
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 63

    (70) expr -> expr TkComma . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 88
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 64

    (71) expr -> expr TkTwoPoints . expr
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    expr                           shift and go to state 89
    atom                           shift and go to state 34
    simple_atom                    shift and go to state 40

state 65

    (51) expr -> TkMinus expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkPlus          reduce using rule 51 (expr -> TkMinus expr .)
    TkMinus         reduce using rule 51 (expr -> TkMinus expr .)
    TkMult          reduce using rule 51 (expr -> TkMinus expr .)
    TkAnd           reduce using rule 51 (expr -> TkMinus expr .)
    TkOr            reduce using rule 51 (expr -> TkMinus expr .)
    TkEqual         reduce using rule 51 (expr -> TkMinus expr .)
    TkNEqual        reduce using rule 51 (expr -> TkMinus expr .)
    TkLess          reduce using rule 51 (expr -> TkMinus expr .)
    TkGreater       reduce using rule 51 (expr -> TkMinus expr .)
    TkLeq           reduce using rule 51 (expr -> TkMinus expr .)
    TkGeq           reduce using rule 51 (expr -> TkMinus expr .)
    TkComma         reduce using rule 51 (expr -> TkMinus expr .)
    TkTwoPoints     reduce using rule 51 (expr -> TkMinus expr .)
    TkSemicolon     reduce using rule 51 (expr -> TkMinus expr .)
    TkCBlock        reduce using rule 51 (expr -> TkMinus expr .)
    TkGuard         reduce using rule 51 (expr -> TkMinus expr .)
    TkNot           reduce using rule 51 (expr -> TkMinus expr .)
    TkNum           reduce using rule 51 (expr -> TkMinus expr .)
    TkTrue          reduce using rule 51 (expr -> TkMinus expr .)
    TkFalse         reduce using rule 51 (expr -> TkMinus expr .)
    TkString        reduce using rule 51 (expr -> TkMinus expr .)
    TkId            reduce using rule 51 (expr -> TkMinus expr .)
    TkOpenPar       reduce using rule 51 (expr -> TkMinus expr .)
    TkFi            reduce using rule 51 (expr -> TkMinus expr .)
    TkEnd           reduce using rule 51 (expr -> TkMinus expr .)
    TkArrow         reduce using rule 51 (expr -> TkMinus expr .)
    TkClosePar      reduce using rule 51 (expr -> TkMinus expr .)

  ! TkPlus          [ shift and go to state 52 ]
  ! TkMinus         [ shift and go to state 53 ]
  ! TkMult          [ shift and go to state 54 ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkComma         [ shift and go to state 63 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 66

    (52) expr -> TkNot expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 52 (expr -> TkNot expr .)
    TkOr            reduce using rule 52 (expr -> TkNot expr .)
    TkTwoPoints     reduce using rule 52 (expr -> TkNot expr .)
    TkSemicolon     reduce using rule 52 (expr -> TkNot expr .)
    TkCBlock        reduce using rule 52 (expr -> TkNot expr .)
    TkGuard         reduce using rule 52 (expr -> TkNot expr .)
    TkNot           reduce using rule 52 (expr -> TkNot expr .)
    TkNum           reduce using rule 52 (expr -> TkNot expr .)
    TkTrue          reduce using rule 52 (expr -> TkNot expr .)
    TkFalse         reduce using rule 52 (expr -> TkNot expr .)
    TkString        reduce using rule 52 (expr -> TkNot expr .)
    TkId            reduce using rule 52 (expr -> TkNot expr .)
    TkOpenPar       reduce using rule 52 (expr -> TkNot expr .)
    TkFi            reduce using rule 52 (expr -> TkNot expr .)
    TkEnd           reduce using rule 52 (expr -> TkNot expr .)
    TkArrow         reduce using rule 52 (expr -> TkNot expr .)
    TkClosePar      reduce using rule 52 (expr -> TkNot expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkMinus         [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkMult          [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkEqual         [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkNEqual        [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkLess          [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkGreater       [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkLeq           [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkGeq           [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkComma         [ reduce using rule 52 (expr -> TkNot expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 67

    (42) atom -> atom TkApp . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom

    TkOpenPar       shift and go to state 41
    TkId            shift and go to state 92
    TkNum           shift and go to state 93
    TkTrue          shift and go to state 94
    TkFalse         shift and go to state 95
    TkString        shift and go to state 96

    atom                           shift and go to state 90
    simple_atom                    shift and go to state 91

state 68

    (44) simple_atom -> atom TkOpenPar . expr TkClosePar
    (51) expr -> . TkMinus expr
    (52) expr -> . TkNot expr
    (53) expr -> . expr TkPlus expr
    (54) expr -> . expr TkMinus expr
    (55) expr -> . expr TkMult expr
    (56) expr -> . expr TkAnd expr
    (57) expr -> . expr TkOr expr
    (58) expr -> . expr TkEqual expr
    (59) expr -> . expr TkNEqual expr
    (60) expr -> . expr TkLess expr
    (61) expr -> . expr TkGreater expr
    (62) expr -> . expr TkLeq expr
    (63) expr -> . expr TkGeq expr
    (64) expr -> . atom
    (65) expr -> . TkNum
    (66) expr -> . TkTrue
    (67) expr -> . TkFalse
    (68) expr -> . TkString
    (69) expr -> . TkId
    (70) expr -> . expr TkComma expr
    (71) expr -> . expr TkTwoPoints expr
    (42) atom -> . atom TkApp simple_atom
    (43) atom -> . simple_atom
    (44) simple_atom -> . atom TkOpenPar expr TkClosePar
    (45) simple_atom -> . TkOpenPar expr TkClosePar
    (46) simple_atom -> . TkId
    (47) simple_atom -> . TkNum
    (48) simple_atom -> . TkTrue
    (49) simple_atom -> . TkFalse
    (50) simple_atom -> . TkString

    TkMinus         shift and go to state 32
    TkNot           shift and go to state 33
    TkNum           shift and go to state 35
    TkTrue          shift and go to state 36
    TkFalse         shift and go to state 37
    TkString        shift and go to state 38
    TkId            shift and go to state 39
    TkOpenPar       shift and go to state 41

    atom                           shift and go to state 34
    expr                           shift and go to state 97
    simple_atom                    shift and go to state 40

state 69

    (45) simple_atom -> TkOpenPar expr . TkClosePar
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkClosePar      shift and go to state 98
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64


state 70

    (28) if_stmt -> TkIf if_guards_list TkFi .

    TkSemicolon     reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkCBlock        reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkGuard         reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkMinus         reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkNot           reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkNum           reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkTrue          reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkFalse         reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkString        reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkId            reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkOpenPar       reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkFi            reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)
    TkEnd           reduce using rule 28 (if_stmt -> TkIf if_guards_list TkFi .)


state 71

    (30) if_guards_list -> if_guard_clause if_guards_list .

    TkFi            reduce using rule 30 (if_guards_list -> if_guard_clause if_guards_list .)


state 72

    (31) if_guard_clause -> expr TkArrow . body_sequencing
    (33) body_sequencing -> . body_stmt_item
    (34) body_sequencing -> . body_stmt_item TkSemicolon body_sequencing
    (35) body_stmt_item -> . assignment_stmt
    (36) body_stmt_item -> . print_stmt
    (37) body_stmt_item -> . skip_stmt
    (38) body_stmt_item -> . return_stmt
    (39) body_stmt_item -> . if_stmt
    (40) body_stmt_item -> . while_stmt
    (41) body_stmt_item -> . block
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd
    (2) block -> . TkOBlock opt_stmt_list TkCBlock

    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23
    TkOBlock        shift and go to state 3

    body_sequencing                shift and go to state 99
    body_stmt_item                 shift and go to state 100
    assignment_stmt                shift and go to state 101
    print_stmt                     shift and go to state 102
    skip_stmt                      shift and go to state 103
    return_stmt                    shift and go to state 104
    if_stmt                        shift and go to state 105
    while_stmt                     shift and go to state 106
    block                          shift and go to state 107

state 73

    (32) if_guard_clause -> TkGuard expr . TkArrow body_sequencing
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkArrow         shift and go to state 108
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64


state 74

    (23) while_stmt -> TkWhile expr TkArrow . body_sequencing TkEnd
    (33) body_sequencing -> . body_stmt_item
    (34) body_sequencing -> . body_stmt_item TkSemicolon body_sequencing
    (35) body_stmt_item -> . assignment_stmt
    (36) body_stmt_item -> . print_stmt
    (37) body_stmt_item -> . skip_stmt
    (38) body_stmt_item -> . return_stmt
    (39) body_stmt_item -> . if_stmt
    (40) body_stmt_item -> . while_stmt
    (41) body_stmt_item -> . block
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd
    (2) block -> . TkOBlock opt_stmt_list TkCBlock

    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23
    TkOBlock        shift and go to state 3

    body_sequencing                shift and go to state 109
    body_stmt_item                 shift and go to state 100
    assignment_stmt                shift and go to state 101
    print_stmt                     shift and go to state 102
    skip_stmt                      shift and go to state 103
    return_stmt                    shift and go to state 104
    if_stmt                        shift and go to state 105
    while_stmt                     shift and go to state 106
    block                          shift and go to state 107

state 75

    (18) declare_id_list -> TkId TkComma declare_id_list .

    TkSemicolon     reduce using rule 18 (declare_id_list -> TkId TkComma declare_id_list .)
    TkCBlock        reduce using rule 18 (declare_id_list -> TkId TkComma declare_id_list .)


state 76

    (16) declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum . TkCBracket declare_id_list

    TkCBracket      shift and go to state 110


state 77

    (53) expr -> expr TkPlus expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkPlus          reduce using rule 53 (expr -> expr TkPlus expr .)
    TkMinus         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkAnd           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkOr            reduce using rule 53 (expr -> expr TkPlus expr .)
    TkEqual         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkNEqual        reduce using rule 53 (expr -> expr TkPlus expr .)
    TkLess          reduce using rule 53 (expr -> expr TkPlus expr .)
    TkGreater       reduce using rule 53 (expr -> expr TkPlus expr .)
    TkLeq           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkGeq           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkComma         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkTwoPoints     reduce using rule 53 (expr -> expr TkPlus expr .)
    TkSemicolon     reduce using rule 53 (expr -> expr TkPlus expr .)
    TkCBlock        reduce using rule 53 (expr -> expr TkPlus expr .)
    TkGuard         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkNot           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkNum           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkTrue          reduce using rule 53 (expr -> expr TkPlus expr .)
    TkFalse         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkString        reduce using rule 53 (expr -> expr TkPlus expr .)
    TkId            reduce using rule 53 (expr -> expr TkPlus expr .)
    TkOpenPar       reduce using rule 53 (expr -> expr TkPlus expr .)
    TkFi            reduce using rule 53 (expr -> expr TkPlus expr .)
    TkEnd           reduce using rule 53 (expr -> expr TkPlus expr .)
    TkArrow         reduce using rule 53 (expr -> expr TkPlus expr .)
    TkClosePar      reduce using rule 53 (expr -> expr TkPlus expr .)
    TkMult          shift and go to state 54

  ! TkMult          [ reduce using rule 53 (expr -> expr TkPlus expr .) ]
  ! TkPlus          [ shift and go to state 52 ]
  ! TkMinus         [ shift and go to state 53 ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkComma         [ shift and go to state 63 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 78

    (54) expr -> expr TkMinus expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkPlus          reduce using rule 54 (expr -> expr TkMinus expr .)
    TkMinus         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkAnd           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkOr            reduce using rule 54 (expr -> expr TkMinus expr .)
    TkEqual         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkNEqual        reduce using rule 54 (expr -> expr TkMinus expr .)
    TkLess          reduce using rule 54 (expr -> expr TkMinus expr .)
    TkGreater       reduce using rule 54 (expr -> expr TkMinus expr .)
    TkLeq           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkGeq           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkComma         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkTwoPoints     reduce using rule 54 (expr -> expr TkMinus expr .)
    TkSemicolon     reduce using rule 54 (expr -> expr TkMinus expr .)
    TkCBlock        reduce using rule 54 (expr -> expr TkMinus expr .)
    TkGuard         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkNot           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkNum           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkTrue          reduce using rule 54 (expr -> expr TkMinus expr .)
    TkFalse         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkString        reduce using rule 54 (expr -> expr TkMinus expr .)
    TkId            reduce using rule 54 (expr -> expr TkMinus expr .)
    TkOpenPar       reduce using rule 54 (expr -> expr TkMinus expr .)
    TkFi            reduce using rule 54 (expr -> expr TkMinus expr .)
    TkEnd           reduce using rule 54 (expr -> expr TkMinus expr .)
    TkArrow         reduce using rule 54 (expr -> expr TkMinus expr .)
    TkClosePar      reduce using rule 54 (expr -> expr TkMinus expr .)
    TkMult          shift and go to state 54

  ! TkMult          [ reduce using rule 54 (expr -> expr TkMinus expr .) ]
  ! TkPlus          [ shift and go to state 52 ]
  ! TkMinus         [ shift and go to state 53 ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkComma         [ shift and go to state 63 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 79

    (55) expr -> expr TkMult expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkPlus          reduce using rule 55 (expr -> expr TkMult expr .)
    TkMinus         reduce using rule 55 (expr -> expr TkMult expr .)
    TkMult          reduce using rule 55 (expr -> expr TkMult expr .)
    TkAnd           reduce using rule 55 (expr -> expr TkMult expr .)
    TkOr            reduce using rule 55 (expr -> expr TkMult expr .)
    TkEqual         reduce using rule 55 (expr -> expr TkMult expr .)
    TkNEqual        reduce using rule 55 (expr -> expr TkMult expr .)
    TkLess          reduce using rule 55 (expr -> expr TkMult expr .)
    TkGreater       reduce using rule 55 (expr -> expr TkMult expr .)
    TkLeq           reduce using rule 55 (expr -> expr TkMult expr .)
    TkGeq           reduce using rule 55 (expr -> expr TkMult expr .)
    TkComma         reduce using rule 55 (expr -> expr TkMult expr .)
    TkTwoPoints     reduce using rule 55 (expr -> expr TkMult expr .)
    TkSemicolon     reduce using rule 55 (expr -> expr TkMult expr .)
    TkCBlock        reduce using rule 55 (expr -> expr TkMult expr .)
    TkGuard         reduce using rule 55 (expr -> expr TkMult expr .)
    TkNot           reduce using rule 55 (expr -> expr TkMult expr .)
    TkNum           reduce using rule 55 (expr -> expr TkMult expr .)
    TkTrue          reduce using rule 55 (expr -> expr TkMult expr .)
    TkFalse         reduce using rule 55 (expr -> expr TkMult expr .)
    TkString        reduce using rule 55 (expr -> expr TkMult expr .)
    TkId            reduce using rule 55 (expr -> expr TkMult expr .)
    TkOpenPar       reduce using rule 55 (expr -> expr TkMult expr .)
    TkFi            reduce using rule 55 (expr -> expr TkMult expr .)
    TkEnd           reduce using rule 55 (expr -> expr TkMult expr .)
    TkArrow         reduce using rule 55 (expr -> expr TkMult expr .)
    TkClosePar      reduce using rule 55 (expr -> expr TkMult expr .)

  ! TkPlus          [ shift and go to state 52 ]
  ! TkMinus         [ shift and go to state 53 ]
  ! TkMult          [ shift and go to state 54 ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkComma         [ shift and go to state 63 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 80

    (56) expr -> expr TkAnd expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 56 (expr -> expr TkAnd expr .)
    TkOr            reduce using rule 56 (expr -> expr TkAnd expr .)
    TkTwoPoints     reduce using rule 56 (expr -> expr TkAnd expr .)
    TkSemicolon     reduce using rule 56 (expr -> expr TkAnd expr .)
    TkCBlock        reduce using rule 56 (expr -> expr TkAnd expr .)
    TkGuard         reduce using rule 56 (expr -> expr TkAnd expr .)
    TkNot           reduce using rule 56 (expr -> expr TkAnd expr .)
    TkNum           reduce using rule 56 (expr -> expr TkAnd expr .)
    TkTrue          reduce using rule 56 (expr -> expr TkAnd expr .)
    TkFalse         reduce using rule 56 (expr -> expr TkAnd expr .)
    TkString        reduce using rule 56 (expr -> expr TkAnd expr .)
    TkId            reduce using rule 56 (expr -> expr TkAnd expr .)
    TkOpenPar       reduce using rule 56 (expr -> expr TkAnd expr .)
    TkFi            reduce using rule 56 (expr -> expr TkAnd expr .)
    TkEnd           reduce using rule 56 (expr -> expr TkAnd expr .)
    TkArrow         reduce using rule 56 (expr -> expr TkAnd expr .)
    TkClosePar      reduce using rule 56 (expr -> expr TkAnd expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkMinus         [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkMult          [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkEqual         [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkNEqual        [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkLess          [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkGreater       [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkLeq           [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkGeq           [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkComma         [ reduce using rule 56 (expr -> expr TkAnd expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 81

    (57) expr -> expr TkOr expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkOr            reduce using rule 57 (expr -> expr TkOr expr .)
    TkTwoPoints     reduce using rule 57 (expr -> expr TkOr expr .)
    TkSemicolon     reduce using rule 57 (expr -> expr TkOr expr .)
    TkCBlock        reduce using rule 57 (expr -> expr TkOr expr .)
    TkGuard         reduce using rule 57 (expr -> expr TkOr expr .)
    TkNot           reduce using rule 57 (expr -> expr TkOr expr .)
    TkNum           reduce using rule 57 (expr -> expr TkOr expr .)
    TkTrue          reduce using rule 57 (expr -> expr TkOr expr .)
    TkFalse         reduce using rule 57 (expr -> expr TkOr expr .)
    TkString        reduce using rule 57 (expr -> expr TkOr expr .)
    TkId            reduce using rule 57 (expr -> expr TkOr expr .)
    TkOpenPar       reduce using rule 57 (expr -> expr TkOr expr .)
    TkFi            reduce using rule 57 (expr -> expr TkOr expr .)
    TkEnd           reduce using rule 57 (expr -> expr TkOr expr .)
    TkArrow         reduce using rule 57 (expr -> expr TkOr expr .)
    TkClosePar      reduce using rule 57 (expr -> expr TkOr expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkMinus         [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkMult          [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkAnd           [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkEqual         [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkNEqual        [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkLess          [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkGreater       [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkLeq           [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkGeq           [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkComma         [ reduce using rule 57 (expr -> expr TkOr expr .) ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 82

    (58) expr -> expr TkEqual expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkOr            reduce using rule 58 (expr -> expr TkEqual expr .)
    TkEqual         reduce using rule 58 (expr -> expr TkEqual expr .)
    TkNEqual        reduce using rule 58 (expr -> expr TkEqual expr .)
    TkLess          reduce using rule 58 (expr -> expr TkEqual expr .)
    TkGreater       reduce using rule 58 (expr -> expr TkEqual expr .)
    TkLeq           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkGeq           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkTwoPoints     reduce using rule 58 (expr -> expr TkEqual expr .)
    TkSemicolon     reduce using rule 58 (expr -> expr TkEqual expr .)
    TkCBlock        reduce using rule 58 (expr -> expr TkEqual expr .)
    TkGuard         reduce using rule 58 (expr -> expr TkEqual expr .)
    TkNot           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkNum           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkTrue          reduce using rule 58 (expr -> expr TkEqual expr .)
    TkFalse         reduce using rule 58 (expr -> expr TkEqual expr .)
    TkString        reduce using rule 58 (expr -> expr TkEqual expr .)
    TkId            reduce using rule 58 (expr -> expr TkEqual expr .)
    TkOpenPar       reduce using rule 58 (expr -> expr TkEqual expr .)
    TkFi            reduce using rule 58 (expr -> expr TkEqual expr .)
    TkEnd           reduce using rule 58 (expr -> expr TkEqual expr .)
    TkArrow         reduce using rule 58 (expr -> expr TkEqual expr .)
    TkClosePar      reduce using rule 58 (expr -> expr TkEqual expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 58 (expr -> expr TkEqual expr .) ]
  ! TkMinus         [ reduce using rule 58 (expr -> expr TkEqual expr .) ]
  ! TkMult          [ reduce using rule 58 (expr -> expr TkEqual expr .) ]
  ! TkComma         [ reduce using rule 58 (expr -> expr TkEqual expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 83

    (59) expr -> expr TkNEqual expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkOr            reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkEqual         reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkNEqual        reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkLess          reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkGreater       reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkLeq           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkGeq           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkTwoPoints     reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkSemicolon     reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkCBlock        reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkGuard         reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkNot           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkNum           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkTrue          reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkFalse         reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkString        reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkId            reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkOpenPar       reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkFi            reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkEnd           reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkArrow         reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkClosePar      reduce using rule 59 (expr -> expr TkNEqual expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 59 (expr -> expr TkNEqual expr .) ]
  ! TkMinus         [ reduce using rule 59 (expr -> expr TkNEqual expr .) ]
  ! TkMult          [ reduce using rule 59 (expr -> expr TkNEqual expr .) ]
  ! TkComma         [ reduce using rule 59 (expr -> expr TkNEqual expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 84

    (60) expr -> expr TkLess expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 60 (expr -> expr TkLess expr .)
    TkOr            reduce using rule 60 (expr -> expr TkLess expr .)
    TkEqual         reduce using rule 60 (expr -> expr TkLess expr .)
    TkNEqual        reduce using rule 60 (expr -> expr TkLess expr .)
    TkLess          reduce using rule 60 (expr -> expr TkLess expr .)
    TkGreater       reduce using rule 60 (expr -> expr TkLess expr .)
    TkLeq           reduce using rule 60 (expr -> expr TkLess expr .)
    TkGeq           reduce using rule 60 (expr -> expr TkLess expr .)
    TkTwoPoints     reduce using rule 60 (expr -> expr TkLess expr .)
    TkSemicolon     reduce using rule 60 (expr -> expr TkLess expr .)
    TkCBlock        reduce using rule 60 (expr -> expr TkLess expr .)
    TkGuard         reduce using rule 60 (expr -> expr TkLess expr .)
    TkNot           reduce using rule 60 (expr -> expr TkLess expr .)
    TkNum           reduce using rule 60 (expr -> expr TkLess expr .)
    TkTrue          reduce using rule 60 (expr -> expr TkLess expr .)
    TkFalse         reduce using rule 60 (expr -> expr TkLess expr .)
    TkString        reduce using rule 60 (expr -> expr TkLess expr .)
    TkId            reduce using rule 60 (expr -> expr TkLess expr .)
    TkOpenPar       reduce using rule 60 (expr -> expr TkLess expr .)
    TkFi            reduce using rule 60 (expr -> expr TkLess expr .)
    TkEnd           reduce using rule 60 (expr -> expr TkLess expr .)
    TkArrow         reduce using rule 60 (expr -> expr TkLess expr .)
    TkClosePar      reduce using rule 60 (expr -> expr TkLess expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 60 (expr -> expr TkLess expr .) ]
  ! TkMinus         [ reduce using rule 60 (expr -> expr TkLess expr .) ]
  ! TkMult          [ reduce using rule 60 (expr -> expr TkLess expr .) ]
  ! TkComma         [ reduce using rule 60 (expr -> expr TkLess expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 85

    (61) expr -> expr TkGreater expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkOr            reduce using rule 61 (expr -> expr TkGreater expr .)
    TkEqual         reduce using rule 61 (expr -> expr TkGreater expr .)
    TkNEqual        reduce using rule 61 (expr -> expr TkGreater expr .)
    TkLess          reduce using rule 61 (expr -> expr TkGreater expr .)
    TkGreater       reduce using rule 61 (expr -> expr TkGreater expr .)
    TkLeq           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkGeq           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkTwoPoints     reduce using rule 61 (expr -> expr TkGreater expr .)
    TkSemicolon     reduce using rule 61 (expr -> expr TkGreater expr .)
    TkCBlock        reduce using rule 61 (expr -> expr TkGreater expr .)
    TkGuard         reduce using rule 61 (expr -> expr TkGreater expr .)
    TkNot           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkNum           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkTrue          reduce using rule 61 (expr -> expr TkGreater expr .)
    TkFalse         reduce using rule 61 (expr -> expr TkGreater expr .)
    TkString        reduce using rule 61 (expr -> expr TkGreater expr .)
    TkId            reduce using rule 61 (expr -> expr TkGreater expr .)
    TkOpenPar       reduce using rule 61 (expr -> expr TkGreater expr .)
    TkFi            reduce using rule 61 (expr -> expr TkGreater expr .)
    TkEnd           reduce using rule 61 (expr -> expr TkGreater expr .)
    TkArrow         reduce using rule 61 (expr -> expr TkGreater expr .)
    TkClosePar      reduce using rule 61 (expr -> expr TkGreater expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 61 (expr -> expr TkGreater expr .) ]
  ! TkMinus         [ reduce using rule 61 (expr -> expr TkGreater expr .) ]
  ! TkMult          [ reduce using rule 61 (expr -> expr TkGreater expr .) ]
  ! TkComma         [ reduce using rule 61 (expr -> expr TkGreater expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 86

    (62) expr -> expr TkLeq expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkOr            reduce using rule 62 (expr -> expr TkLeq expr .)
    TkEqual         reduce using rule 62 (expr -> expr TkLeq expr .)
    TkNEqual        reduce using rule 62 (expr -> expr TkLeq expr .)
    TkLess          reduce using rule 62 (expr -> expr TkLeq expr .)
    TkGreater       reduce using rule 62 (expr -> expr TkLeq expr .)
    TkLeq           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkGeq           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkTwoPoints     reduce using rule 62 (expr -> expr TkLeq expr .)
    TkSemicolon     reduce using rule 62 (expr -> expr TkLeq expr .)
    TkCBlock        reduce using rule 62 (expr -> expr TkLeq expr .)
    TkGuard         reduce using rule 62 (expr -> expr TkLeq expr .)
    TkNot           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkNum           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkTrue          reduce using rule 62 (expr -> expr TkLeq expr .)
    TkFalse         reduce using rule 62 (expr -> expr TkLeq expr .)
    TkString        reduce using rule 62 (expr -> expr TkLeq expr .)
    TkId            reduce using rule 62 (expr -> expr TkLeq expr .)
    TkOpenPar       reduce using rule 62 (expr -> expr TkLeq expr .)
    TkFi            reduce using rule 62 (expr -> expr TkLeq expr .)
    TkEnd           reduce using rule 62 (expr -> expr TkLeq expr .)
    TkArrow         reduce using rule 62 (expr -> expr TkLeq expr .)
    TkClosePar      reduce using rule 62 (expr -> expr TkLeq expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 62 (expr -> expr TkLeq expr .) ]
  ! TkMinus         [ reduce using rule 62 (expr -> expr TkLeq expr .) ]
  ! TkMult          [ reduce using rule 62 (expr -> expr TkLeq expr .) ]
  ! TkComma         [ reduce using rule 62 (expr -> expr TkLeq expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 87

    (63) expr -> expr TkGeq expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkOr            reduce using rule 63 (expr -> expr TkGeq expr .)
    TkEqual         reduce using rule 63 (expr -> expr TkGeq expr .)
    TkNEqual        reduce using rule 63 (expr -> expr TkGeq expr .)
    TkLess          reduce using rule 63 (expr -> expr TkGeq expr .)
    TkGreater       reduce using rule 63 (expr -> expr TkGeq expr .)
    TkLeq           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkGeq           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkTwoPoints     reduce using rule 63 (expr -> expr TkGeq expr .)
    TkSemicolon     reduce using rule 63 (expr -> expr TkGeq expr .)
    TkCBlock        reduce using rule 63 (expr -> expr TkGeq expr .)
    TkGuard         reduce using rule 63 (expr -> expr TkGeq expr .)
    TkNot           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkNum           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkTrue          reduce using rule 63 (expr -> expr TkGeq expr .)
    TkFalse         reduce using rule 63 (expr -> expr TkGeq expr .)
    TkString        reduce using rule 63 (expr -> expr TkGeq expr .)
    TkId            reduce using rule 63 (expr -> expr TkGeq expr .)
    TkOpenPar       reduce using rule 63 (expr -> expr TkGeq expr .)
    TkFi            reduce using rule 63 (expr -> expr TkGeq expr .)
    TkEnd           reduce using rule 63 (expr -> expr TkGeq expr .)
    TkArrow         reduce using rule 63 (expr -> expr TkGeq expr .)
    TkClosePar      reduce using rule 63 (expr -> expr TkGeq expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkComma         shift and go to state 63

  ! TkPlus          [ reduce using rule 63 (expr -> expr TkGeq expr .) ]
  ! TkMinus         [ reduce using rule 63 (expr -> expr TkGeq expr .) ]
  ! TkMult          [ reduce using rule 63 (expr -> expr TkGeq expr .) ]
  ! TkComma         [ reduce using rule 63 (expr -> expr TkGeq expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 88

    (70) expr -> expr TkComma expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkAnd           reduce using rule 70 (expr -> expr TkComma expr .)
    TkOr            reduce using rule 70 (expr -> expr TkComma expr .)
    TkEqual         reduce using rule 70 (expr -> expr TkComma expr .)
    TkNEqual        reduce using rule 70 (expr -> expr TkComma expr .)
    TkLess          reduce using rule 70 (expr -> expr TkComma expr .)
    TkGreater       reduce using rule 70 (expr -> expr TkComma expr .)
    TkLeq           reduce using rule 70 (expr -> expr TkComma expr .)
    TkGeq           reduce using rule 70 (expr -> expr TkComma expr .)
    TkComma         reduce using rule 70 (expr -> expr TkComma expr .)
    TkTwoPoints     reduce using rule 70 (expr -> expr TkComma expr .)
    TkSemicolon     reduce using rule 70 (expr -> expr TkComma expr .)
    TkCBlock        reduce using rule 70 (expr -> expr TkComma expr .)
    TkGuard         reduce using rule 70 (expr -> expr TkComma expr .)
    TkNot           reduce using rule 70 (expr -> expr TkComma expr .)
    TkNum           reduce using rule 70 (expr -> expr TkComma expr .)
    TkTrue          reduce using rule 70 (expr -> expr TkComma expr .)
    TkFalse         reduce using rule 70 (expr -> expr TkComma expr .)
    TkString        reduce using rule 70 (expr -> expr TkComma expr .)
    TkId            reduce using rule 70 (expr -> expr TkComma expr .)
    TkOpenPar       reduce using rule 70 (expr -> expr TkComma expr .)
    TkFi            reduce using rule 70 (expr -> expr TkComma expr .)
    TkEnd           reduce using rule 70 (expr -> expr TkComma expr .)
    TkArrow         reduce using rule 70 (expr -> expr TkComma expr .)
    TkClosePar      reduce using rule 70 (expr -> expr TkComma expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54

  ! TkPlus          [ reduce using rule 70 (expr -> expr TkComma expr .) ]
  ! TkMinus         [ reduce using rule 70 (expr -> expr TkComma expr .) ]
  ! TkMult          [ reduce using rule 70 (expr -> expr TkComma expr .) ]
  ! TkAnd           [ shift and go to state 55 ]
  ! TkOr            [ shift and go to state 56 ]
  ! TkEqual         [ shift and go to state 57 ]
  ! TkNEqual        [ shift and go to state 58 ]
  ! TkLess          [ shift and go to state 59 ]
  ! TkGreater       [ shift and go to state 60 ]
  ! TkLeq           [ shift and go to state 61 ]
  ! TkGeq           [ shift and go to state 62 ]
  ! TkComma         [ shift and go to state 63 ]
  ! TkTwoPoints     [ shift and go to state 64 ]


state 89

    (71) expr -> expr TkTwoPoints expr .
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkComma resolved as shift
  ! shift/reduce conflict for TkTwoPoints resolved as shift
    TkSemicolon     reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkCBlock        reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkGuard         reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkNot           reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkNum           reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkTrue          reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkFalse         reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkString        reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkId            reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkOpenPar       reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkFi            reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkEnd           reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkArrow         reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkClosePar      reduce using rule 71 (expr -> expr TkTwoPoints expr .)
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64

  ! TkPlus          [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkMinus         [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkMult          [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkAnd           [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkOr            [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkEqual         [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkNEqual        [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkLess          [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkGreater       [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkLeq           [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkGeq           [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkComma         [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]
  ! TkTwoPoints     [ reduce using rule 71 (expr -> expr TkTwoPoints expr .) ]


state 90

    (44) simple_atom -> atom . TkOpenPar expr TkClosePar
    (42) atom -> atom . TkApp simple_atom

    TkOpenPar       shift and go to state 68
    TkApp           shift and go to state 67


state 91

    (42) atom -> atom TkApp simple_atom .
    (43) atom -> simple_atom .

  ! reduce/reduce conflict for TkOpenPar resolved using rule 42 (atom -> atom TkApp simple_atom .)
  ! reduce/reduce conflict for TkApp resolved using rule 42 (atom -> atom TkApp simple_atom .)
    TkApp           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkOpenPar       reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkPlus          reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkMinus         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkMult          reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkAnd           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkOr            reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkEqual         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkNEqual        reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkLess          reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkGreater       reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkLeq           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkGeq           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkComma         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkTwoPoints     reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkSemicolon     reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkCBlock        reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkGuard         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkNot           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkNum           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkTrue          reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkFalse         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkString        reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkId            reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkFi            reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkEnd           reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkArrow         reduce using rule 42 (atom -> atom TkApp simple_atom .)
    TkClosePar      reduce using rule 42 (atom -> atom TkApp simple_atom .)

  ! TkOpenPar       [ reduce using rule 43 (atom -> simple_atom .) ]
  ! TkApp           [ reduce using rule 43 (atom -> simple_atom .) ]


state 92

    (46) simple_atom -> TkId .

    TkApp           reduce using rule 46 (simple_atom -> TkId .)
    TkOpenPar       reduce using rule 46 (simple_atom -> TkId .)
    TkPlus          reduce using rule 46 (simple_atom -> TkId .)
    TkMinus         reduce using rule 46 (simple_atom -> TkId .)
    TkMult          reduce using rule 46 (simple_atom -> TkId .)
    TkAnd           reduce using rule 46 (simple_atom -> TkId .)
    TkOr            reduce using rule 46 (simple_atom -> TkId .)
    TkEqual         reduce using rule 46 (simple_atom -> TkId .)
    TkNEqual        reduce using rule 46 (simple_atom -> TkId .)
    TkLess          reduce using rule 46 (simple_atom -> TkId .)
    TkGreater       reduce using rule 46 (simple_atom -> TkId .)
    TkLeq           reduce using rule 46 (simple_atom -> TkId .)
    TkGeq           reduce using rule 46 (simple_atom -> TkId .)
    TkComma         reduce using rule 46 (simple_atom -> TkId .)
    TkTwoPoints     reduce using rule 46 (simple_atom -> TkId .)
    TkSemicolon     reduce using rule 46 (simple_atom -> TkId .)
    TkCBlock        reduce using rule 46 (simple_atom -> TkId .)
    TkGuard         reduce using rule 46 (simple_atom -> TkId .)
    TkNot           reduce using rule 46 (simple_atom -> TkId .)
    TkNum           reduce using rule 46 (simple_atom -> TkId .)
    TkTrue          reduce using rule 46 (simple_atom -> TkId .)
    TkFalse         reduce using rule 46 (simple_atom -> TkId .)
    TkString        reduce using rule 46 (simple_atom -> TkId .)
    TkId            reduce using rule 46 (simple_atom -> TkId .)
    TkFi            reduce using rule 46 (simple_atom -> TkId .)
    TkEnd           reduce using rule 46 (simple_atom -> TkId .)
    TkArrow         reduce using rule 46 (simple_atom -> TkId .)
    TkClosePar      reduce using rule 46 (simple_atom -> TkId .)


state 93

    (47) simple_atom -> TkNum .

    TkApp           reduce using rule 47 (simple_atom -> TkNum .)
    TkOpenPar       reduce using rule 47 (simple_atom -> TkNum .)
    TkPlus          reduce using rule 47 (simple_atom -> TkNum .)
    TkMinus         reduce using rule 47 (simple_atom -> TkNum .)
    TkMult          reduce using rule 47 (simple_atom -> TkNum .)
    TkAnd           reduce using rule 47 (simple_atom -> TkNum .)
    TkOr            reduce using rule 47 (simple_atom -> TkNum .)
    TkEqual         reduce using rule 47 (simple_atom -> TkNum .)
    TkNEqual        reduce using rule 47 (simple_atom -> TkNum .)
    TkLess          reduce using rule 47 (simple_atom -> TkNum .)
    TkGreater       reduce using rule 47 (simple_atom -> TkNum .)
    TkLeq           reduce using rule 47 (simple_atom -> TkNum .)
    TkGeq           reduce using rule 47 (simple_atom -> TkNum .)
    TkComma         reduce using rule 47 (simple_atom -> TkNum .)
    TkTwoPoints     reduce using rule 47 (simple_atom -> TkNum .)
    TkSemicolon     reduce using rule 47 (simple_atom -> TkNum .)
    TkCBlock        reduce using rule 47 (simple_atom -> TkNum .)
    TkGuard         reduce using rule 47 (simple_atom -> TkNum .)
    TkNot           reduce using rule 47 (simple_atom -> TkNum .)
    TkNum           reduce using rule 47 (simple_atom -> TkNum .)
    TkTrue          reduce using rule 47 (simple_atom -> TkNum .)
    TkFalse         reduce using rule 47 (simple_atom -> TkNum .)
    TkString        reduce using rule 47 (simple_atom -> TkNum .)
    TkId            reduce using rule 47 (simple_atom -> TkNum .)
    TkFi            reduce using rule 47 (simple_atom -> TkNum .)
    TkEnd           reduce using rule 47 (simple_atom -> TkNum .)
    TkArrow         reduce using rule 47 (simple_atom -> TkNum .)
    TkClosePar      reduce using rule 47 (simple_atom -> TkNum .)


state 94

    (48) simple_atom -> TkTrue .

    TkApp           reduce using rule 48 (simple_atom -> TkTrue .)
    TkOpenPar       reduce using rule 48 (simple_atom -> TkTrue .)
    TkPlus          reduce using rule 48 (simple_atom -> TkTrue .)
    TkMinus         reduce using rule 48 (simple_atom -> TkTrue .)
    TkMult          reduce using rule 48 (simple_atom -> TkTrue .)
    TkAnd           reduce using rule 48 (simple_atom -> TkTrue .)
    TkOr            reduce using rule 48 (simple_atom -> TkTrue .)
    TkEqual         reduce using rule 48 (simple_atom -> TkTrue .)
    TkNEqual        reduce using rule 48 (simple_atom -> TkTrue .)
    TkLess          reduce using rule 48 (simple_atom -> TkTrue .)
    TkGreater       reduce using rule 48 (simple_atom -> TkTrue .)
    TkLeq           reduce using rule 48 (simple_atom -> TkTrue .)
    TkGeq           reduce using rule 48 (simple_atom -> TkTrue .)
    TkComma         reduce using rule 48 (simple_atom -> TkTrue .)
    TkTwoPoints     reduce using rule 48 (simple_atom -> TkTrue .)
    TkSemicolon     reduce using rule 48 (simple_atom -> TkTrue .)
    TkCBlock        reduce using rule 48 (simple_atom -> TkTrue .)
    TkGuard         reduce using rule 48 (simple_atom -> TkTrue .)
    TkNot           reduce using rule 48 (simple_atom -> TkTrue .)
    TkNum           reduce using rule 48 (simple_atom -> TkTrue .)
    TkTrue          reduce using rule 48 (simple_atom -> TkTrue .)
    TkFalse         reduce using rule 48 (simple_atom -> TkTrue .)
    TkString        reduce using rule 48 (simple_atom -> TkTrue .)
    TkId            reduce using rule 48 (simple_atom -> TkTrue .)
    TkFi            reduce using rule 48 (simple_atom -> TkTrue .)
    TkEnd           reduce using rule 48 (simple_atom -> TkTrue .)
    TkArrow         reduce using rule 48 (simple_atom -> TkTrue .)
    TkClosePar      reduce using rule 48 (simple_atom -> TkTrue .)


state 95

    (49) simple_atom -> TkFalse .

    TkApp           reduce using rule 49 (simple_atom -> TkFalse .)
    TkOpenPar       reduce using rule 49 (simple_atom -> TkFalse .)
    TkPlus          reduce using rule 49 (simple_atom -> TkFalse .)
    TkMinus         reduce using rule 49 (simple_atom -> TkFalse .)
    TkMult          reduce using rule 49 (simple_atom -> TkFalse .)
    TkAnd           reduce using rule 49 (simple_atom -> TkFalse .)
    TkOr            reduce using rule 49 (simple_atom -> TkFalse .)
    TkEqual         reduce using rule 49 (simple_atom -> TkFalse .)
    TkNEqual        reduce using rule 49 (simple_atom -> TkFalse .)
    TkLess          reduce using rule 49 (simple_atom -> TkFalse .)
    TkGreater       reduce using rule 49 (simple_atom -> TkFalse .)
    TkLeq           reduce using rule 49 (simple_atom -> TkFalse .)
    TkGeq           reduce using rule 49 (simple_atom -> TkFalse .)
    TkComma         reduce using rule 49 (simple_atom -> TkFalse .)
    TkTwoPoints     reduce using rule 49 (simple_atom -> TkFalse .)
    TkSemicolon     reduce using rule 49 (simple_atom -> TkFalse .)
    TkCBlock        reduce using rule 49 (simple_atom -> TkFalse .)
    TkGuard         reduce using rule 49 (simple_atom -> TkFalse .)
    TkNot           reduce using rule 49 (simple_atom -> TkFalse .)
    TkNum           reduce using rule 49 (simple_atom -> TkFalse .)
    TkTrue          reduce using rule 49 (simple_atom -> TkFalse .)
    TkFalse         reduce using rule 49 (simple_atom -> TkFalse .)
    TkString        reduce using rule 49 (simple_atom -> TkFalse .)
    TkId            reduce using rule 49 (simple_atom -> TkFalse .)
    TkFi            reduce using rule 49 (simple_atom -> TkFalse .)
    TkEnd           reduce using rule 49 (simple_atom -> TkFalse .)
    TkArrow         reduce using rule 49 (simple_atom -> TkFalse .)
    TkClosePar      reduce using rule 49 (simple_atom -> TkFalse .)


state 96

    (50) simple_atom -> TkString .

    TkApp           reduce using rule 50 (simple_atom -> TkString .)
    TkOpenPar       reduce using rule 50 (simple_atom -> TkString .)
    TkPlus          reduce using rule 50 (simple_atom -> TkString .)
    TkMinus         reduce using rule 50 (simple_atom -> TkString .)
    TkMult          reduce using rule 50 (simple_atom -> TkString .)
    TkAnd           reduce using rule 50 (simple_atom -> TkString .)
    TkOr            reduce using rule 50 (simple_atom -> TkString .)
    TkEqual         reduce using rule 50 (simple_atom -> TkString .)
    TkNEqual        reduce using rule 50 (simple_atom -> TkString .)
    TkLess          reduce using rule 50 (simple_atom -> TkString .)
    TkGreater       reduce using rule 50 (simple_atom -> TkString .)
    TkLeq           reduce using rule 50 (simple_atom -> TkString .)
    TkGeq           reduce using rule 50 (simple_atom -> TkString .)
    TkComma         reduce using rule 50 (simple_atom -> TkString .)
    TkTwoPoints     reduce using rule 50 (simple_atom -> TkString .)
    TkSemicolon     reduce using rule 50 (simple_atom -> TkString .)
    TkCBlock        reduce using rule 50 (simple_atom -> TkString .)
    TkGuard         reduce using rule 50 (simple_atom -> TkString .)
    TkNot           reduce using rule 50 (simple_atom -> TkString .)
    TkNum           reduce using rule 50 (simple_atom -> TkString .)
    TkTrue          reduce using rule 50 (simple_atom -> TkString .)
    TkFalse         reduce using rule 50 (simple_atom -> TkString .)
    TkString        reduce using rule 50 (simple_atom -> TkString .)
    TkId            reduce using rule 50 (simple_atom -> TkString .)
    TkFi            reduce using rule 50 (simple_atom -> TkString .)
    TkEnd           reduce using rule 50 (simple_atom -> TkString .)
    TkArrow         reduce using rule 50 (simple_atom -> TkString .)
    TkClosePar      reduce using rule 50 (simple_atom -> TkString .)


state 97

    (44) simple_atom -> atom TkOpenPar expr . TkClosePar
    (53) expr -> expr . TkPlus expr
    (54) expr -> expr . TkMinus expr
    (55) expr -> expr . TkMult expr
    (56) expr -> expr . TkAnd expr
    (57) expr -> expr . TkOr expr
    (58) expr -> expr . TkEqual expr
    (59) expr -> expr . TkNEqual expr
    (60) expr -> expr . TkLess expr
    (61) expr -> expr . TkGreater expr
    (62) expr -> expr . TkLeq expr
    (63) expr -> expr . TkGeq expr
    (70) expr -> expr . TkComma expr
    (71) expr -> expr . TkTwoPoints expr

    TkClosePar      shift and go to state 111
    TkPlus          shift and go to state 52
    TkMinus         shift and go to state 53
    TkMult          shift and go to state 54
    TkAnd           shift and go to state 55
    TkOr            shift and go to state 56
    TkEqual         shift and go to state 57
    TkNEqual        shift and go to state 58
    TkLess          shift and go to state 59
    TkGreater       shift and go to state 60
    TkLeq           shift and go to state 61
    TkGeq           shift and go to state 62
    TkComma         shift and go to state 63
    TkTwoPoints     shift and go to state 64


state 98

    (45) simple_atom -> TkOpenPar expr TkClosePar .

    TkApp           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkOpenPar       reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkPlus          reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkMinus         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkMult          reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkAnd           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkOr            reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkEqual         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkNEqual        reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkLess          reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkGreater       reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkLeq           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkGeq           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkComma         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkTwoPoints     reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkSemicolon     reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkCBlock        reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkGuard         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkNot           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkNum           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkTrue          reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkFalse         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkString        reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkId            reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkFi            reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkEnd           reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkArrow         reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)
    TkClosePar      reduce using rule 45 (simple_atom -> TkOpenPar expr TkClosePar .)


state 99

    (31) if_guard_clause -> expr TkArrow body_sequencing .

    TkGuard         reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkMinus         reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkNot           reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkNum           reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkTrue          reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkFalse         reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkString        reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkId            reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkOpenPar       reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)
    TkFi            reduce using rule 31 (if_guard_clause -> expr TkArrow body_sequencing .)


state 100

    (33) body_sequencing -> body_stmt_item .
    (34) body_sequencing -> body_stmt_item . TkSemicolon body_sequencing

    TkGuard         reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkMinus         reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkNot           reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkNum           reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkTrue          reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkFalse         reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkString        reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkId            reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkOpenPar       reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkFi            reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkEnd           reduce using rule 33 (body_sequencing -> body_stmt_item .)
    TkSemicolon     shift and go to state 112


state 101

    (35) body_stmt_item -> assignment_stmt .

    TkSemicolon     reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkGuard         reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkMinus         reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkNot           reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkNum           reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkTrue          reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkFalse         reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkString        reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkId            reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkOpenPar       reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkFi            reduce using rule 35 (body_stmt_item -> assignment_stmt .)
    TkEnd           reduce using rule 35 (body_stmt_item -> assignment_stmt .)


state 102

    (36) body_stmt_item -> print_stmt .

    TkSemicolon     reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkGuard         reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkMinus         reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkNot           reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkNum           reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkTrue          reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkFalse         reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkString        reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkId            reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkOpenPar       reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkFi            reduce using rule 36 (body_stmt_item -> print_stmt .)
    TkEnd           reduce using rule 36 (body_stmt_item -> print_stmt .)


state 103

    (37) body_stmt_item -> skip_stmt .

    TkSemicolon     reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkGuard         reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkMinus         reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkNot           reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkNum           reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkTrue          reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkFalse         reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkString        reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkId            reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkOpenPar       reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkFi            reduce using rule 37 (body_stmt_item -> skip_stmt .)
    TkEnd           reduce using rule 37 (body_stmt_item -> skip_stmt .)


state 104

    (38) body_stmt_item -> return_stmt .

    TkSemicolon     reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkGuard         reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkMinus         reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkNot           reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkNum           reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkTrue          reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkFalse         reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkString        reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkId            reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkOpenPar       reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkFi            reduce using rule 38 (body_stmt_item -> return_stmt .)
    TkEnd           reduce using rule 38 (body_stmt_item -> return_stmt .)


state 105

    (39) body_stmt_item -> if_stmt .

    TkSemicolon     reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkGuard         reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkMinus         reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkNot           reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkNum           reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkTrue          reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkFalse         reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkString        reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkId            reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkOpenPar       reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkFi            reduce using rule 39 (body_stmt_item -> if_stmt .)
    TkEnd           reduce using rule 39 (body_stmt_item -> if_stmt .)


state 106

    (40) body_stmt_item -> while_stmt .

    TkSemicolon     reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkGuard         reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkMinus         reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkNot           reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkNum           reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkTrue          reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkFalse         reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkString        reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkId            reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkOpenPar       reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkFi            reduce using rule 40 (body_stmt_item -> while_stmt .)
    TkEnd           reduce using rule 40 (body_stmt_item -> while_stmt .)


state 107

    (41) body_stmt_item -> block .

    TkSemicolon     reduce using rule 41 (body_stmt_item -> block .)
    TkGuard         reduce using rule 41 (body_stmt_item -> block .)
    TkMinus         reduce using rule 41 (body_stmt_item -> block .)
    TkNot           reduce using rule 41 (body_stmt_item -> block .)
    TkNum           reduce using rule 41 (body_stmt_item -> block .)
    TkTrue          reduce using rule 41 (body_stmt_item -> block .)
    TkFalse         reduce using rule 41 (body_stmt_item -> block .)
    TkString        reduce using rule 41 (body_stmt_item -> block .)
    TkId            reduce using rule 41 (body_stmt_item -> block .)
    TkOpenPar       reduce using rule 41 (body_stmt_item -> block .)
    TkFi            reduce using rule 41 (body_stmt_item -> block .)
    TkEnd           reduce using rule 41 (body_stmt_item -> block .)


state 108

    (32) if_guard_clause -> TkGuard expr TkArrow . body_sequencing
    (33) body_sequencing -> . body_stmt_item
    (34) body_sequencing -> . body_stmt_item TkSemicolon body_sequencing
    (35) body_stmt_item -> . assignment_stmt
    (36) body_stmt_item -> . print_stmt
    (37) body_stmt_item -> . skip_stmt
    (38) body_stmt_item -> . return_stmt
    (39) body_stmt_item -> . if_stmt
    (40) body_stmt_item -> . while_stmt
    (41) body_stmt_item -> . block
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd
    (2) block -> . TkOBlock opt_stmt_list TkCBlock

    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23
    TkOBlock        shift and go to state 3

    body_sequencing                shift and go to state 113
    body_stmt_item                 shift and go to state 100
    assignment_stmt                shift and go to state 101
    print_stmt                     shift and go to state 102
    skip_stmt                      shift and go to state 103
    return_stmt                    shift and go to state 104
    if_stmt                        shift and go to state 105
    while_stmt                     shift and go to state 106
    block                          shift and go to state 107

state 109

    (23) while_stmt -> TkWhile expr TkArrow body_sequencing . TkEnd

    TkEnd           shift and go to state 114


state 110

    (16) declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum TkCBracket . declare_id_list
    (17) declare_id_list -> . TkId
    (18) declare_id_list -> . TkId TkComma declare_id_list

    TkId            shift and go to state 27

    declare_id_list                shift and go to state 115

state 111

    (44) simple_atom -> atom TkOpenPar expr TkClosePar .

    TkApp           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkOpenPar       reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkPlus          reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkMinus         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkMult          reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkAnd           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkOr            reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkEqual         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkNEqual        reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkLess          reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkGreater       reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkLeq           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkGeq           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkComma         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkTwoPoints     reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkSemicolon     reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkCBlock        reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkGuard         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkNot           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkNum           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkTrue          reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkFalse         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkString        reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkId            reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkFi            reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkEnd           reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkArrow         reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)
    TkClosePar      reduce using rule 44 (simple_atom -> atom TkOpenPar expr TkClosePar .)


state 112

    (34) body_sequencing -> body_stmt_item TkSemicolon . body_sequencing
    (33) body_sequencing -> . body_stmt_item
    (34) body_sequencing -> . body_stmt_item TkSemicolon body_sequencing
    (35) body_stmt_item -> . assignment_stmt
    (36) body_stmt_item -> . print_stmt
    (37) body_stmt_item -> . skip_stmt
    (38) body_stmt_item -> . return_stmt
    (39) body_stmt_item -> . if_stmt
    (40) body_stmt_item -> . while_stmt
    (41) body_stmt_item -> . block
    (19) assignment_stmt -> . TkId TkAsig expr
    (20) print_stmt -> . TkPrint expr
    (21) skip_stmt -> . TkSkip
    (22) return_stmt -> . TkReturn expr
    (28) if_stmt -> . TkIf if_guards_list TkFi
    (23) while_stmt -> . TkWhile expr TkArrow body_sequencing TkEnd
    (2) block -> . TkOBlock opt_stmt_list TkCBlock

    TkId            shift and go to state 18
    TkPrint         shift and go to state 19
    TkSkip          shift and go to state 20
    TkReturn        shift and go to state 21
    TkIf            shift and go to state 22
    TkWhile         shift and go to state 23
    TkOBlock        shift and go to state 3

    body_stmt_item                 shift and go to state 100
    body_sequencing                shift and go to state 116
    assignment_stmt                shift and go to state 101
    print_stmt                     shift and go to state 102
    skip_stmt                      shift and go to state 103
    return_stmt                    shift and go to state 104
    if_stmt                        shift and go to state 105
    while_stmt                     shift and go to state 106
    block                          shift and go to state 107

state 113

    (32) if_guard_clause -> TkGuard expr TkArrow body_sequencing .

    TkGuard         reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkMinus         reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkNot           reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkNum           reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkTrue          reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkFalse         reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkString        reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkId            reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkOpenPar       reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)
    TkFi            reduce using rule 32 (if_guard_clause -> TkGuard expr TkArrow body_sequencing .)


state 114

    (23) while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .

    TkSemicolon     reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkCBlock        reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkGuard         reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkMinus         reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkNot           reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkNum           reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkTrue          reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkFalse         reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkString        reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkId            reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkOpenPar       reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkFi            reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)
    TkEnd           reduce using rule 23 (while_stmt -> TkWhile expr TkArrow body_sequencing TkEnd .)


state 115

    (16) declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list .

    TkSemicolon     reduce using rule 16 (declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list .)
    TkCBlock        reduce using rule 16 (declaration_stmt -> TkFunction TkOBracket TkSoForth TkNum TkCBracket declare_id_list .)


state 116

    (34) body_sequencing -> body_stmt_item TkSemicolon body_sequencing .

    TkGuard         reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkMinus         reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkNot           reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkNum           reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkTrue          reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkFalse         reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkString        reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkId            reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkOpenPar       reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkFi            reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)
    TkEnd           reduce using rule 34 (body_sequencing -> body_stmt_item TkSemicolon body_sequencing .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TkMinus in state 31 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 34 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 42 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 51 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 89 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 89 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 89 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 89 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 89 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 89 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 89 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 89 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 89 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 89 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 89 resolved as shift
WARNING: shift/reduce conflict for TkComma in state 89 resolved as shift
WARNING: shift/reduce conflict for TkTwoPoints in state 89 resolved as shift
WARNING: reduce/reduce conflict in state 35 resolved using rule (simple_atom -> TkNum)
WARNING: rejected rule (expr -> TkNum) in state 35
WARNING: reduce/reduce conflict in state 36 resolved using rule (simple_atom -> TkTrue)
WARNING: rejected rule (expr -> TkTrue) in state 36
WARNING: reduce/reduce conflict in state 37 resolved using rule (simple_atom -> TkFalse)
WARNING: rejected rule (expr -> TkFalse) in state 37
WARNING: reduce/reduce conflict in state 38 resolved using rule (simple_atom -> TkString)
WARNING: rejected rule (expr -> TkString) in state 38
WARNING: reduce/reduce conflict in state 39 resolved using rule (simple_atom -> TkId)
WARNING: rejected rule (expr -> TkId) in state 39
WARNING: reduce/reduce conflict in state 91 resolved using rule (atom -> atom TkApp simple_atom)
WARNING: rejected rule (atom -> simple_atom) in state 91
WARNING: Rule (expr -> TkNum) is never reduced
WARNING: Rule (expr -> TkTrue) is never reduced
WARNING: Rule (expr -> TkFalse) is never reduced
WARNING: Rule (expr -> TkString) is never reduced
WARNING: Rule (expr -> TkId) is never reduced
